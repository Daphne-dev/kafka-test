services:
  producer:
    build:
      context: .
      dockerfile: ./docker/producer.Dockerfile
    ports:
      - '3002:3002'
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4096M
    volumes:
      - ./apps/producer/src:/app/apps/producer/src
    networks:
      - kafka-network

  consumer:
    build:
      context: .
      dockerfile: ./docker/consumer.Dockerfile
    ports:
      - '3001:3001'
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4096M
    volumes:
      - ./apps/consumer/src:/app/apps/consumer/src
    networks:
      - kafka-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - kafka-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3003:3000'
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - kafka-network

  kafka1:
    image: bitnami/kafka:3.5
    ports:
      - 29092:9092
      - 29094:9094
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://localhost:29094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFVoi6f9Ndw
    networks:
      - kafka-network
    volumes:
      - kafka1-data:/bitnami/kafka
    hostname: kafka1

  kafka2:
    image: bitnami/kafka:3.5
    ports:
      - 29095:9092
      - 29096:9094
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092,EXTERNAL://localhost:29096
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFVoi6f9Ndw
    networks:
      - kafka-network
    volumes:
      - kafka2-data:/bitnami/kafka
    hostname: kafka2
    depends_on:
      - kafka1

  kafka3:
    image: bitnami/kafka:3.5
    ports:
      - 29097:9092
      - 29098:9094
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka3:9092,EXTERNAL://localhost:29098
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
      - KAFKA_KRAFT_CLUSTER_ID=LelM2dIFQkiUFVoi6f9Ndw
    networks:
      - kafka-network
    volumes:
      - kafka3-data:/bitnami/kafka
    hostname: kafka3
    depends_on:
      - kafka1
      - kafka2

  kafka-exporter:
    image: danielqsj/kafka-exporter
    command:
      [
        '--kafka.server=kafka1:9092',
        '--kafka.server=kafka2:9092',
        '--kafka.server=kafka3:9092',
      ]
    ports:
      - 9308:9308
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9092,kafka3:9092
      - DYNAMIC_CONFIG_ENABLED=true
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - 9000:8080
    networks:
      - kafka-network

volumes:
  kafka1-data:
    driver: local
  kafka2-data:
    driver: local
  kafka3-data:
    driver: local

networks:
  kafka-network:
    driver: bridge
